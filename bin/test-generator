#!/usr/bin/env php
<?php

use Detain\TestGenerator\DependencyContainer;
use Detain\TestGenerator\PhpFile;

if (file_exists(__DIR__.'/../vendor/autoload.php')) {
    require __DIR__.'/../vendor/autoload.php';
} elseif (file_exists(__DIR__.'/../../../autoload.php')) {
    require __DIR__.'/../../../autoload.php';
} else {
    echo 'Run "composer install" in order to install the necessary dependencies.'.PHP_EOL;
    exit(1);
}

$description = <<<EOT
Test-Generator

Usage:
  test-generator [options] [(--src-base --test-base)] <file>

Options:
  --php5                        Generate PHP5 compatible code [default:false].
  --phpunit5                    Generate a test for PHPUnit 5 [default:false].
  --mockery                     Generates mocks using Mockery [default:false].
  --covers                      Adds the @covers annotation   [default:false].
  --base-class=<base-class>     Inherit from this base class e.g. "Example\TestCase".
  --subject-format=<format>     Format the field for the subject class.
  --field-format=<format>       Format the fields for dependencies.
  -s, --src-base=<path>         Base directory for source files; requires --test-base
  -t, --test-base=<path>        Base directory for test files; requires --src-base; writes output to that directory

Format:
  %n                            Name starting with a lower-case letter.
  %N                            Name starting with an upper-case letter.
  %t                            Type starting with a lower-case letter.
  %T                            Type starting with a upper-case letter.

Format Examples:
  "mock_%t"                      Customer => mock_customer
  "%NTest"                       arg => ArgTest
  "testClass"                    SomeName => TestClass
EOT;
$args = Docopt::handle($description, $argv);

$container = new DependencyContainer($args);
try {
    $container->testGenerator()->run(new PhpFile(new SplFileInfo($args['<file>'])));
} catch (Exception $exception) {
    echo $description
        . PHP_EOL
        . PHP_EOL
        . '! ' . $exception->getMessage()
        . PHP_EOL;
    exit(1);
}
